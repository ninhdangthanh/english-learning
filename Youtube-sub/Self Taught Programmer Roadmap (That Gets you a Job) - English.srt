1
00:00:00,033 --> 00:00:02,535
If I can break into the software
engineering world

2
00:00:02,535 --> 00:00:05,538
without a computer science degree,
then so can you.

3
00:00:05,572 --> 00:00:06,573
With so many computer

4
00:00:06,573 --> 00:00:10,143
science or equivalents and job postings,
it seems discouraging.

5
00:00:10,377 --> 00:00:14,114
But in today's video, I'm
going to be giving you a practical robot

6
00:00:14,114 --> 00:00:17,851
that you can use to teach yourself
how to code with the intention

7
00:00:17,851 --> 00:00:18,985
of getting you a job.

8
00:00:18,985 --> 00:00:22,622
If you're new here, then Hi,
my name is Lewis and I'm on a mission

9
00:00:22,622 --> 00:00:26,693
to inspire developers and tech enthusiasts
in the world of software engineering.

10
00:00:26,726 --> 00:00:29,996
There's a ton of different roles
that you can pursue.

11
00:00:30,030 --> 00:00:33,033
Front end, back end, Q way.

12
00:00:33,166 --> 00:00:34,467
Like, there's so much.

13
00:00:34,467 --> 00:00:38,271
So before we even touch this road map,
let's figure out what our end goal

14
00:00:38,271 --> 00:00:38,872
should be.

15
00:00:38,872 --> 00:00:42,809
If you love those crazy animated websites
or if you're into clean, sleek

16
00:00:42,809 --> 00:00:46,546
and esthetic user interfaces,
it sounds like front end is for you.

17
00:00:46,579 --> 00:00:48,848
No aid for design, no problem.

18
00:00:48,848 --> 00:00:49,616
Choose back end.

19
00:00:49,616 --> 00:00:51,651
If you really want
to get stuck under the hood.

20
00:00:51,651 --> 00:00:55,255
And if you don't know, I have a video
describing what programing language

21
00:00:55,255 --> 00:00:58,024
you should learn based off of the industry
that interests you the most.

22
00:00:58,024 --> 00:00:59,225
So check that out if you want.

23
00:00:59,225 --> 00:01:00,393
For the remainder of this video,

24
00:01:00,393 --> 00:01:04,197
I'm just going to be referencing Fullstack
developer just because it kind of wraps

25
00:01:04,197 --> 00:01:04,931
around everything.

26
00:01:04,931 --> 00:01:08,435
However, this roadmap isn't
geared towards any specific industry.

27
00:01:10,670 --> 00:01:12,672
Learn how to program.

28
00:01:12,672 --> 00:01:17,911
So our first priority is how to program
as well as how to think like a programmer,

29
00:01:17,911 --> 00:01:20,280
no matter what level
you are in your career,

30
00:01:20,280 --> 00:01:22,682
you're always going to be learning
something new.

31
00:01:22,682 --> 00:01:28,021
Software engineering requires a deep
understanding of how computers recode.

32
00:01:28,054 --> 00:01:33,793
So start with a programing language
and do not, I repeat, do not spend

33
00:01:33,793 --> 00:01:37,430
too much time thinking about what
programing language you should learn.

34
00:01:37,464 --> 00:01:42,068
In my humble opinion, you should start
with JavaScript or Python.

35
00:01:42,068 --> 00:01:43,970
And I have two reasons for this.

36
00:01:43,970 --> 00:01:47,240
One, they're the most popular languages,
meaning it'll be much easier

37
00:01:47,240 --> 00:01:49,542
to find resources
to help you become more fluent

38
00:01:49,542 --> 00:01:52,112
and to concepts like variables, data
types.

39
00:01:52,112 --> 00:01:55,448
Functions are already in these languages
and translates elsewhere.

40
00:01:55,515 --> 00:01:59,986
Course Learn any programing language that
you want to learn like I'm not your boss.

41
00:02:00,120 --> 00:02:03,022
Here are some resources
where you can learn programing for books.

42
00:02:03,022 --> 00:02:05,425
No starch Press has some great options.

43
00:02:05,425 --> 00:02:07,260
Specifically, look for the beginner books

44
00:02:07,260 --> 00:02:09,362
that are targeted towards new programmers.

45
00:02:09,362 --> 00:02:11,331
Bootcamps are going to be more pricey,

46
00:02:11,331 --> 00:02:14,367
but the accountability is great
if you can fork out that cash

47
00:02:14,367 --> 00:02:17,904
and if you're into video tutorials,
I recommend zero two Mastery,

48
00:02:17,904 --> 00:02:21,407
which I've used before,
but is also the sponsor of today's video.

49
00:02:21,407 --> 00:02:26,379
Listen, There's a ton of different videos
on YouTube, Udemy,

50
00:02:26,913 --> 00:02:29,849
Twitter, whatever,
but none have the intentions

51
00:02:29,849 --> 00:02:33,019
of helping you use these new skills
that you just developed.

52
00:02:33,153 --> 00:02:36,856
Zero two Mastery is entire philosophy
revolves around outcome based results,

53
00:02:36,856 --> 00:02:39,526
meaning that their courses
are designed to help you get hired

54
00:02:39,526 --> 00:02:42,328
rather than just learn a skill
you can show at a party.

55
00:02:42,328 --> 00:02:45,498
Sorry, are programmers getting invited
to parties asking for a friend?

56
00:02:45,498 --> 00:02:47,300
You can take their free career path quiz

57
00:02:47,300 --> 00:02:48,168
that will literally give you

58
00:02:48,168 --> 00:02:51,237
a personalized career roadmap
based on your goals and experience,

59
00:02:51,237 --> 00:02:53,173
which hopefully you did the step before

60
00:02:53,173 --> 00:02:56,843
just fall on the courses, projects
and interview prep to land your dream job

61
00:02:56,843 --> 00:03:01,080
and if you ever get stuck along the way,
which you know happens to the best of us,

62
00:03:01,080 --> 00:03:04,851
the community of over 400,000 students
are here to help answer any questions.

63
00:03:04,884 --> 00:03:08,221
Something I love as they've added,
I've dedicated a project section

64
00:03:08,221 --> 00:03:10,823
where they've been launching a new project
you can build every week.

65
00:03:10,823 --> 00:03:12,258
Nothing beats learning by doing.

66
00:03:12,258 --> 00:03:16,196
And these projects are also a great way
to build up your portfolio and confidence.

67
00:03:16,196 --> 00:03:17,230
So if you want to learn

68
00:03:17,230 --> 00:03:20,300
the most in-demand skills, like literally,
I just saw a course go up

69
00:03:20,300 --> 00:03:22,335
that was about large language
models and Zero

70
00:03:22,335 --> 00:03:26,172
Mastery is an incredible resource
for new or existing developers like myself

71
00:03:26,339 --> 00:03:29,175
who want to constantly stay ahead
to get started with their courses

72
00:03:29,175 --> 00:03:31,110
and working towards
landing a job as a software

73
00:03:31,110 --> 00:03:35,114
engineer, which, by the way,
can make up to $100,000 per year.

74
00:03:35,114 --> 00:03:38,284
It'll only cost you
wait a minute, $23 a month.

75
00:03:39,185 --> 00:03:40,687
How do these guys even make any money?

76
00:03:40,687 --> 00:03:41,421
Graduate from zero

77
00:03:41,421 --> 00:03:44,557
to mastery of land, a position at Tesla,
Amazon, Google and more.

78
00:03:44,591 --> 00:03:46,025
Use the code in the description below

79
00:03:46,025 --> 00:03:48,194
to level up your career
and support the channel.

80
00:03:48,194 --> 00:03:49,729
30 days money back guaranteed.

81
00:03:49,729 --> 00:03:52,232
Thanks again to Zero Mastery
for supporting the channel.

82
00:03:52,232 --> 00:03:54,400
Once you've read a book or done
a course of some sort,

83
00:03:54,400 --> 00:03:57,503
you'll have some familiarity
with how the programing language works.

84
00:03:57,503 --> 00:03:58,438
Let's go to the next step.

85
00:04:00,406 --> 00:04:02,475
Building a portfolio.

86
00:04:02,475 --> 00:04:05,245
You're probably thinking
build a portfolio.

87
00:04:05,245 --> 00:04:07,113
Like I have no idea what I'm doing.

88
00:04:07,113 --> 00:04:08,948
Well, the good news, neither do I.

89
00:04:08,948 --> 00:04:11,551
There are many reasons to start portfolio
really early.

90
00:04:11,551 --> 00:04:14,754
One, it helps you build a community,
which, speaking of community,

91
00:04:14,754 --> 00:04:17,790
I have a Discord channel
with over 9000 other developers.

92
00:04:17,790 --> 00:04:21,227
I love to code so I would be happy
if you would join to help you

93
00:04:21,227 --> 00:04:25,031
communicate abstract ideas in ways that
are understandable to a general audience.

94
00:04:25,031 --> 00:04:29,102
And three, you can knock out a project
and create a portfolio in one go.

95
00:04:29,102 --> 00:04:32,005
Now, if I were to start over,
this is how I was structure it.

96
00:04:32,005 --> 00:04:35,942
I would create a web page that has a home
page, a blog page, and a project page.

97
00:04:36,309 --> 00:04:38,645
This would mean that
I can have a little blurb about me.

98
00:04:38,645 --> 00:04:41,681
I can start blogging to get my ideas
and learning out into the world.

99
00:04:41,681 --> 00:04:45,752
Then a project page so I can showcase
all my amazing things that I've worked on.

100
00:04:45,752 --> 00:04:49,222
If you want to build your own website,
you can use HTML, CSS and JavaScript.

101
00:04:49,255 --> 00:04:52,659
You can also learn some advanced
frameworks like next JSA or Jungle.

102
00:04:52,659 --> 00:04:54,560
But if you really just want something up
and fast,

103
00:04:54,560 --> 00:04:58,298
then something like Ghost or WordPress
are two of my favorites.

104
00:04:58,298 --> 00:05:00,833
This portfolio is going to act
like a diary moving forward.

105
00:05:00,833 --> 00:05:02,001
We'll keep coming back to this

106
00:05:02,001 --> 00:05:05,438
like as our home and continue to update it
so that in the future

107
00:05:05,438 --> 00:05:09,042
we can prove that we have the experience
and that we know what we're talking about.

108
00:05:10,743 --> 00:05:12,945
Build beginning projects.

109
00:05:12,945 --> 00:05:15,048
You probably build some projects
and the courses

110
00:05:15,048 --> 00:05:18,384
that you took, but water
things are coming off.

111
00:05:18,718 --> 00:05:22,121
We're diving straight into the deep end,
whether you like it or not.

112
00:05:22,121 --> 00:05:24,457
Sorry, that was weird.

113
00:05:24,457 --> 00:05:25,024
Don't be alarmed

114
00:05:25,024 --> 00:05:28,394
though is extremely common in software
engineering to go into something

115
00:05:28,394 --> 00:05:30,563
without experience
and needing to understand

116
00:05:30,563 --> 00:05:32,298
the requirements of how to get it done.

117
00:05:32,298 --> 00:05:34,500
We have to set goals
because if you thought

118
00:05:34,500 --> 00:05:37,337
you were learning during a course,
well then this.

119
00:05:37,337 --> 00:05:40,373
While you're going to learn ten times
easier, you're three ways.

120
00:05:40,373 --> 00:05:42,208
You are going to get a beginner
project idea.

121
00:05:42,208 --> 00:05:47,213
One use Try to find some to think
of something easy you would like to use.

122
00:05:47,213 --> 00:05:50,283
And three uses open source repository
to help you get started.

123
00:05:50,283 --> 00:05:54,320
Now I love this repository right here,
but please use this carefully.

124
00:05:54,354 --> 00:05:57,523
Each of these resources are linked
with pages on how you can build it,

125
00:05:57,523 --> 00:05:59,792
which is going to take away
from your learning.

126
00:05:59,792 --> 00:06:02,462
Just use the titles as ideas
and see what you think.

127
00:06:02,462 --> 00:06:04,163
Here's how you're going to be successful
with this.

128
00:06:04,163 --> 00:06:07,066
Let's grab
an idea using method one charge Djibouti.

129
00:06:07,066 --> 00:06:09,268
I asked it for elicit beginner ideas.

130
00:06:12,271 --> 00:06:12,572
All right.

131
00:06:12,572 --> 00:06:14,207
I like this expense tracker.

132
00:06:14,207 --> 00:06:16,609
All right.
An expense tracker. Interesting.

133
00:06:16,609 --> 00:06:18,778
We would want to accept input.

134
00:06:18,778 --> 00:06:22,248
Like the expense,
the category of it, and the price.

135
00:06:22,248 --> 00:06:25,852
We can then maybe get a detailed output
after we are done inserting.

136
00:06:25,885 --> 00:06:29,355
So I don't know about you,
but my stupid little pea brain right here

137
00:06:29,789 --> 00:06:31,891
freezes under pressure,
so I would recommend

138
00:06:31,891 --> 00:06:34,761
breaking this down into micro tasks.

139
00:06:34,761 --> 00:06:39,365
Let me show you why not create input
for expense price and category to parse

140
00:06:39,465 --> 00:06:42,769
input and lowercase
all values three store in a file type

141
00:06:42,769 --> 00:06:46,773
so we can access it later for import
that file type and get all expenses

142
00:06:46,773 --> 00:06:51,310
under a certain category and get the sum
and then five show the user the output.

143
00:06:51,310 --> 00:06:54,313
Well,
I have seen like an overwhelming one app

144
00:06:54,347 --> 00:06:58,017
is now being broken down
into five micro application.

145
00:06:58,151 --> 00:07:01,320
Also, we just have some ideas for our blog
and portfolio.

146
00:07:01,320 --> 00:07:03,489
Best way to ask for multiple
input in Python.

147
00:07:03,489 --> 00:07:05,792
Best ways to store data
that is in a database.

148
00:07:05,792 --> 00:07:07,727
Beautiful output in python. Guys.

149
00:07:07,727 --> 00:07:11,063
I'm being serious here
communicating to an audience

150
00:07:11,063 --> 00:07:14,500
really helps
you learn throughout your entire process.

151
00:07:14,500 --> 00:07:17,703
And this diary approach that we're taking
is going to create a breadcrumb

152
00:07:17,703 --> 00:07:21,541
for your whole entire programing journey,
which also means that people know

153
00:07:21,541 --> 00:07:23,643
what you're talking about
and finding an idea

154
00:07:23,643 --> 00:07:27,213
and breaking it down into a bunch of
small pieces is going to help you

155
00:07:28,247 --> 00:07:29,482
code 20 times better.

156
00:07:29,482 --> 00:07:31,250
And don't be scared to read documents.

157
00:07:31,250 --> 00:07:33,052
Open next step.

158
00:07:33,052 --> 00:07:36,055
Learn more advanced topics and databases.

159
00:07:36,122 --> 00:07:39,492
Okay, You started building
some amazing beginner projects

160
00:07:39,492 --> 00:07:42,595
and you kind of feel like a badass,
which is good for you.

161
00:07:42,995 --> 00:07:44,130
I think you should feel like that.

162
00:07:44,130 --> 00:07:45,565
So in my example that I mentioned

163
00:07:45,565 --> 00:07:48,701
with the Fullstack developer,
while we can then go into more advanced

164
00:07:48,701 --> 00:07:52,772
topics of Python
like Python has a web server, databases,

165
00:07:52,972 --> 00:07:56,576
algorithms, again,
I have a more dedicated video to becoming

166
00:07:56,576 --> 00:08:00,780
a full stack developer, front end
developer, a back end developer, whatever.

167
00:08:00,780 --> 00:08:02,615
But here is the spark notes on this.

168
00:08:02,615 --> 00:08:05,685
Software is often built
with many moving parts at the same time.

169
00:08:05,718 --> 00:08:08,921
So let's start moving towards
that by building a back end web server

170
00:08:08,921 --> 00:08:09,555
with Python.

171
00:08:09,555 --> 00:08:12,358
Let's
think about how an application will work.

172
00:08:12,358 --> 00:08:17,430
You have a smartphone, a microcomputer,
a website, whatever, talking to a server

173
00:08:17,430 --> 00:08:21,067
in that server, some computation happens
and gathers memory from a database.

174
00:08:21,067 --> 00:08:22,568
This architecture is simple,

175
00:08:22,568 --> 00:08:24,937
but keep this in your head
when you think of developing apps.

176
00:08:24,937 --> 00:08:29,709
If I wanted to learn Advanced Python,
for example, I would expand into SGI,

177
00:08:29,709 --> 00:08:34,514
which would be Flask or Django Databases,
Sequel or NoSQL API development.

178
00:08:34,547 --> 00:08:37,350
How can you get all the pieces of software
to talk to each other?

179
00:08:37,350 --> 00:08:38,918
And if you haven't learned about classes

180
00:08:38,918 --> 00:08:41,554
or object oriented,
then now is the time to do so.

181
00:08:41,554 --> 00:08:44,590
Also, start looking into data structures
and algorithms.

182
00:08:44,590 --> 00:08:46,592
Realistically,
at this point in your journey,

183
00:08:46,592 --> 00:08:48,995
you definitely have stumbled
across them a little bit,

184
00:08:48,995 --> 00:08:52,298
but they're an absolute essential
to computer science by even just

185
00:08:52,298 --> 00:08:55,334
a glance of this will really help you
with your coding journey.

186
00:08:55,334 --> 00:08:56,536
But stay tuned for that.

187
00:08:56,536 --> 00:08:58,804
This is where it becomes
really important to have an end goal.

188
00:08:58,804 --> 00:09:01,841
If you want to be a full stack developer,
then learn what I said above.

189
00:09:01,841 --> 00:09:02,742
If you want to be in game

190
00:09:02,742 --> 00:09:06,679
development, learn more advanced concepts
in your programing, language or engine.

191
00:09:06,712 --> 00:09:08,047
The possibilities are endless.

192
00:09:08,047 --> 00:09:10,917
But here are some general resources
that will work most of the time.

193
00:09:10,917 --> 00:09:11,484
Most books on

194
00:09:11,484 --> 00:09:14,820
no starch press have an advanced version
in most programing languages.

195
00:09:14,820 --> 00:09:16,989
Zero to mastery
also have some advanced topics

196
00:09:16,989 --> 00:09:19,225
you can use as well,
or join a coding community

197
00:09:19,225 --> 00:09:22,895
and see what other people are working on
and what is required to make that

198
00:09:24,764 --> 00:09:27,033
build and advanced at

199
00:09:27,033 --> 00:09:27,633
your back.

200
00:09:27,633 --> 00:09:29,769
In the scenario
now where you've learned a lot

201
00:09:29,769 --> 00:09:32,838
but need to take off your water wings
while in this case

202
00:09:32,939 --> 00:09:36,108
take your water wings off
and strap some bricks to your feet.

203
00:09:37,009 --> 00:09:38,578
Sorry, was that too far?

204
00:09:38,578 --> 00:09:40,112
At this rate, you've learned a lot.

205
00:09:40,112 --> 00:09:43,249
You'll understand how technology works
together to create a harmonious app

206
00:09:43,449 --> 00:09:45,785
and feel like you have the potential
to be as orchestrator.

207
00:09:45,785 --> 00:09:47,286
I just made that up on the fly,
by the way.

208
00:09:47,286 --> 00:09:48,621
We can do what we did before.

209
00:09:48,621 --> 00:09:50,523
We can also find inspiration
and open source.

210
00:09:50,523 --> 00:09:51,324
Again, I like this

211
00:09:51,324 --> 00:09:54,594
project called Build Your Own Acts,
but beware, it gets pretty nuts.

212
00:09:54,594 --> 00:09:59,065
Build an OS with rust like I want to go
outside once every three days at least.

213
00:09:59,065 --> 00:10:01,200
Let's take the same idea you had
in the beginner project

214
00:10:01,200 --> 00:10:04,036
and expand it with that new technology
you just learned.

215
00:10:04,036 --> 00:10:06,572
Imagine of the expense tracker
that we made in the first half

216
00:10:06,572 --> 00:10:11,310
had a web form that you could fill out
and then talked to a server with an API

217
00:10:11,477 --> 00:10:14,547
and then had a database
that was able to store this information

218
00:10:14,547 --> 00:10:16,983
as well as crunch
some numbers on the file.

219
00:10:16,983 --> 00:10:19,051
The same philosophy applies when building

220
00:10:19,051 --> 00:10:20,953
break it down with your dumb
little pea brain.

221
00:10:20,953 --> 00:10:23,356
Well, sorry, I have the brain.

222
00:10:23,356 --> 00:10:26,659
You're probably a little bit smarter than
I am, so create a form of three inputs.

223
00:10:28,728 --> 00:10:29,929
Write a function that sends

224
00:10:29,929 --> 00:10:32,932
an HTTP request with all the data,

225
00:10:33,966 --> 00:10:35,368
Write a flash application

226
00:10:35,368 --> 00:10:38,371
that accepts that information
and passes it.

227
00:10:39,372 --> 00:10:42,375
Format
this to accept into an actual query,

228
00:10:43,743 --> 00:10:46,746
write a query to get all existing inputs,

229
00:10:47,913 --> 00:10:50,916
sign all together

230
00:10:50,950 --> 00:10:52,718
serialize output, enter JSON

231
00:10:52,718 --> 00:10:55,721
and send back to the user

232
00:10:55,988 --> 00:10:58,991
and display the results in a fancy way.

233
00:11:00,126 --> 00:11:02,928
Again,
this method allowed us to chop away at it

234
00:11:02,928 --> 00:11:05,698
just one piece at a time,
but it also gives us some business

235
00:11:05,698 --> 00:11:07,233
and communication tools as well.

236
00:11:07,233 --> 00:11:11,170
By breaking down things into a scope
and how much you can execute it.

237
00:11:11,170 --> 00:11:14,940
I am once again going to bother you
about the portfolio and blog

238
00:11:14,940 --> 00:11:17,910
with this experience of building
this out comes a lot of great knowledge

239
00:11:17,910 --> 00:11:21,047
that you can share best packages
to create forums, most secure

240
00:11:21,047 --> 00:11:24,650
ways to insert you all JSON,
serializing for beginners, etc.

241
00:11:24,684 --> 00:11:28,421
This content feedback and validation
you'll receive from this is what will help

242
00:11:28,421 --> 00:11:29,455
you gather authority

243
00:11:29,455 --> 00:11:32,525
to keep moving forward and connect
with other like minded developers.

244
00:11:32,558 --> 00:11:35,761
Something we haven't even discussed yet
is working as a team.

245
00:11:35,761 --> 00:11:39,365
Your blog and portfolio will help you
with this whole communication aspects,

246
00:11:39,365 --> 00:11:42,635
but it is really important to learn tools
like get for example.

247
00:11:42,668 --> 00:11:45,137
This will be key,
especially for the next step.

248
00:11:47,206 --> 00:11:49,241
Getting an experience.

249
00:11:49,241 --> 00:11:51,510
How can an entry level job require

250
00:11:51,510 --> 00:11:54,714
experience
when I need that job to get experience?

251
00:11:54,747 --> 00:11:57,416
I hate, hate, hate.

252
00:11:57,416 --> 00:12:00,219
I hate to say this,
but it's the sad reality.

253
00:12:00,219 --> 00:12:04,457
No education and no experience
is considered a risk to employers.

254
00:12:04,457 --> 00:12:05,291
And realistically,

255
00:12:05,291 --> 00:12:09,061
this shouldn't be true because graduates
could have just flown under the radar.

256
00:12:09,061 --> 00:12:11,997
But that degree is serious authority.

257
00:12:11,997 --> 00:12:12,832
Just a disclaimer.

258
00:12:12,832 --> 00:12:16,769
This is what I did, and if you can please
avoid this as much as possible.

259
00:12:16,769 --> 00:12:20,239
But I had to work for free to prove myself
as a young person.

260
00:12:20,239 --> 00:12:24,744
I needed people to have a no rest attitude
when it came to hiring me,

261
00:12:24,744 --> 00:12:28,380
so I would often do small jobs
or small businesses to help with this.

262
00:12:28,380 --> 00:12:32,351
I'm very privileged to be in a situation
where I could work for free,

263
00:12:32,351 --> 00:12:35,454
so please never aim to work for free gain.

264
00:12:35,454 --> 00:12:36,455
Some real life experience

265
00:12:36,455 --> 00:12:39,825
by consulting with small businesses
that often face software issues.

266
00:12:39,859 --> 00:12:43,362
These can range from simple connectivity
between two software applications

267
00:12:43,362 --> 00:12:47,166
to adding a small perform on a website
that can be printed out by offering

268
00:12:47,166 --> 00:12:49,668
to solve a small problem for a client,
you can gain

269
00:12:49,668 --> 00:12:52,671
valuable experience
working with real world requirements.

270
00:12:52,671 --> 00:12:55,875
So let's say, for example,
they wanted to print in real time

271
00:12:55,875 --> 00:13:00,780
when a web form submission happened again,
people in mentality, How can we do this?

272
00:13:00,780 --> 00:13:02,948
Create a service in the middle
or on the server

273
00:13:02,948 --> 00:13:05,518
that passes all of the data
once it is passed correctly,

274
00:13:05,518 --> 00:13:09,088
send it to the computer in the office
and format on letterhead, paper, print

275
00:13:09,088 --> 00:13:11,390
and save somewhere
that the job was a success.

276
00:13:11,390 --> 00:13:15,661
Gluing two things together is arguably
some of the most effective way

277
00:13:15,661 --> 00:13:19,031
that you can gain real world experience
with small businesses.

278
00:13:19,031 --> 00:13:22,134
It's also small enough to the point
where you don't have to slave away

279
00:13:22,134 --> 00:13:25,004
building an application
that someone asked you to do another way

280
00:13:25,004 --> 00:13:27,439
you could get experience
is by contributing to open source.

281
00:13:27,439 --> 00:13:31,477
Go to GitHub issues of any decent sized
project and it will be swarmed with bugs.

282
00:13:31,544 --> 00:13:33,612
This could be a good opportunity
to work with code

283
00:13:33,612 --> 00:13:35,514
in the real world and provide your input.

284
00:13:35,514 --> 00:13:38,717
I will say that this method
is a little bit tougher just because

285
00:13:38,717 --> 00:13:42,521
you have to be familiar with the project,
but it's still incredible nonetheless.

286
00:13:44,023 --> 00:13:46,592
Computer Science related Topics.

287
00:13:46,592 --> 00:13:48,894
Now all the advice I have led up to
this moment

288
00:13:48,894 --> 00:13:52,031
have been extremely practical,
and that's on purpose.

289
00:13:52,031 --> 00:13:56,135
But the word software
engineer is extremely controversial

290
00:13:56,135 --> 00:13:59,071
and it's because of that one word
engineer.

291
00:13:59,071 --> 00:14:00,906
Computer science is an extremely dense

292
00:14:00,906 --> 00:14:04,710
topic that often involves
a lot of theory and abstract concepts.

293
00:14:04,743 --> 00:14:08,547
However, it's extremely important
to have at least a surface level

294
00:14:08,547 --> 00:14:12,384
understanding of computer science,
especially going into your interview

295
00:14:12,384 --> 00:14:14,887
or even diving deep into your code.
For example.

296
00:14:14,887 --> 00:14:16,155
How does that network work?

297
00:14:16,155 --> 00:14:19,458
What responsibilities
does your operating system handle?

298
00:14:19,491 --> 00:14:23,429
File systems, computer architectures,
maybe even cloud computing.

299
00:14:23,462 --> 00:14:24,363
My recommendation

300
00:14:24,363 --> 00:14:28,033
when it comes to learning computer
science is to start with roadmaps, stages,

301
00:14:28,200 --> 00:14:32,137
self-learning, computer science charts,
and it provides a lot of resources

302
00:14:32,137 --> 00:14:34,440
and lengths on each subject
that you click on.

303
00:14:34,440 --> 00:14:38,377
Also, look into the open Source Society
University's computer science course.

304
00:14:38,377 --> 00:14:41,513
In that course, some of the things overlap
with what we've already discussed,

305
00:14:41,513 --> 00:14:43,015
so be a bit selective with it.

306
00:14:43,015 --> 00:14:45,818
I'm a big fan of the calculus
and math courses specifically

307
00:14:45,818 --> 00:14:49,255
for this reason, so make sure you take
that and catch up on math

308
00:14:51,457 --> 00:14:53,292
interview, prep

309
00:14:53,292 --> 00:14:56,495
your community involvement
and blog posts, show that you're skilled

310
00:14:56,495 --> 00:14:59,298
at communicating what you know.
You have been doing that right?

311
00:14:59,298 --> 00:15:02,334
So if you get overwhelmed in an interview,
well, we've already discovered

312
00:15:02,334 --> 00:15:05,571
the method of breaking things
down the brain method.

313
00:15:05,638 --> 00:15:08,641
That way you don't have to practice.

314
00:15:08,941 --> 00:15:11,343
Okay, I'm joking. Of wake up.

315
00:15:11,343 --> 00:15:14,179
Now is your time to practice
more theoretical programing problems

316
00:15:14,179 --> 00:15:17,249
to show employers that you know
what you're talking about at this stage.

317
00:15:17,249 --> 00:15:20,586
Hopefully you have some experience
which will let you explain to employers

318
00:15:20,786 --> 00:15:24,590
how you're able to take requirements
and translate it over into the real world.

319
00:15:24,590 --> 00:15:25,791
Technical interviews

320
00:15:25,791 --> 00:15:30,062
may or may not be something that you have
to do depending on where you get a job,

321
00:15:30,062 --> 00:15:33,399
but it's still worth taking time out
of your day to keep your brain on alert.

322
00:15:33,399 --> 00:15:35,100
And I mean, let's be real here.

323
00:15:35,100 --> 00:15:36,635
It's just good for your brain in general.

324
00:15:36,635 --> 00:15:38,470
If this is the moment
you have to prove yourself,

325
00:15:38,470 --> 00:15:41,640
you want to make the best impression
possible, It's really important

326
00:15:41,640 --> 00:15:43,409
to not be discouraged in this moment.

327
00:15:43,409 --> 00:15:45,678
You may struggle
in your first ten interviews.

328
00:15:45,678 --> 00:15:47,813
Just keep going
and learn from your mistakes.

329
00:15:47,813 --> 00:15:48,781
That's all you can do.

330
00:15:48,781 --> 00:15:51,750
And you'll just ultimately
be a better person by the end of it.

331
00:15:51,750 --> 00:15:54,753
Eventually, you'll get that reply back
saying that you got the job.

332
00:15:54,753 --> 00:15:57,423
You're just some sample ways
on how you can prep less code.

333
00:15:57,423 --> 00:16:00,092
This one is Mehmed everywhere online,
but there's a great collection

334
00:16:00,092 --> 00:16:03,395
of resources to do technical interviews,
so use them at your disposal.

335
00:16:03,395 --> 00:16:04,296
Mock interviews,

336
00:16:04,296 --> 00:16:07,866
Get a friend to download an interview
and have them quiz you on the spot.

337
00:16:07,900 --> 00:16:11,303
One of my favorites, the tech interview
handbook is an open source handbook

338
00:16:11,303 --> 00:16:15,374
that will give you practical tips
on resume building algorithms and more.

339
00:16:15,374 --> 00:16:17,676
An incredible resource.
So definitely check that one out.

340
00:16:17,676 --> 00:16:18,744
Zero two Mastery

341
00:16:18,744 --> 00:16:21,480
zero two Mastery has a course
where you can master the tech interview

342
00:16:21,480 --> 00:16:25,684
specifically with large tech companies
like Google, Facebook, etc.

343
00:16:25,751 --> 00:16:26,986
Congratulations.

344
00:16:26,986 --> 00:16:31,390
It was a long journey, but your passion
and dedication did it for you.

345
00:16:33,726 --> 00:16:35,427
Keep learning.

346
00:16:35,427 --> 00:16:36,128
Great.

347
00:16:36,128 --> 00:16:38,464
You landed the job.

348
00:16:38,464 --> 00:16:39,698
Why are you still watching this video,
though?

349
00:16:39,698 --> 00:16:43,002
A misconception I always had
when it came to working in the software

350
00:16:43,002 --> 00:16:46,572
engineering industry was that eventually
I was going to get good

351
00:16:46,572 --> 00:16:49,775
and that this whole learning process
will finally go away.

352
00:16:49,808 --> 00:16:52,811
So if that's you and you're feeling
this way, come here for a sec.

353
00:16:53,278 --> 00:16:54,813
That feeling never goes away.

354
00:16:54,813 --> 00:16:57,816
Software engineering is a field
that is constantly throwing things at you

355
00:16:57,816 --> 00:16:59,685
that you have never even seen before.

356
00:16:59,685 --> 00:17:02,087
I mean, let's turn
this into a positive, though.

357
00:17:02,087 --> 00:17:04,289
The feeling of constantly
having to learn and expand

358
00:17:04,289 --> 00:17:07,359
or knowledge is ultimately
an extremely rewarding experience.

359
00:17:07,393 --> 00:17:11,830
My biggest take away from this video
is that experience is the biggest leverage

360
00:17:11,830 --> 00:17:15,701
that you can have when it comes to working
in the software engineering industry.

361
00:17:15,701 --> 00:17:19,538
My roadmap is a very practical guide
on how you can get experience as fast

362
00:17:19,538 --> 00:17:21,173
as possible. In computer science.

363
00:17:21,173 --> 00:17:22,207
There's a ton of things

364
00:17:22,207 --> 00:17:26,278
that you will need to learn,
but my roadmap is a very practical guide

365
00:17:26,278 --> 00:17:30,015
on how you can get experience
as fast as possible so you can get a job.

366
00:17:30,015 --> 00:17:33,018
I hope this roadmap was valuable to you
and helped

367
00:17:33,018 --> 00:17:36,755
inspire you to either learn programing
or get into the industry.

368
00:17:36,755 --> 00:17:39,758
If you want something a little bit
more laser focused and an industry.

369
00:17:39,758 --> 00:17:42,895
Well, I have a full stack
developer roadmap or a back end

370
00:17:42,895 --> 00:17:46,432
developer roadmap, so make sure you check
that out on my channel piece out Coders.